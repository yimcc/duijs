import { Control } from "./Control";
import { PaintManager } from "./PaintManager";

export abstract class WindowBase{
    getSkinFile():string;
    initResource():void;
    initWindow():void;
    getSkinType():string;
    getManagerName():string;

    createControl(className:string):Control;
    queryControlText(id:string,type:string):string;

    //窗口事件
    onClose():void;
    onDestroy():void;
    onSize(w:number,h:number):void;
    onChar(ch:number,state:number):void;
    onKeyDown(key:number,state:number):void;
    onKeyUp(key:number,state:number):void;
    onKillFocus():void;
    onSetFocus():void;

    //wparam MK_CONTROL
    onLButtonDown(x:number,y:number,wparam:number):void;
    onLButtonUp(x:number,y:number,wparam:number):void;
    onMouseMove(x:number,y:number,wparam:number):void;
    onMouseWheel(x:number,y:number,delta:number,wparam:number):void;
    onMouseHover(x:number,y:number,wparam:number):void

    handleCustomMessage(msg:number,wparam:number,lparam:number):void;
}

export class Window extends WindowBase{

    create(name:string):boolean;
    create(name:string,style:number,style_ex?:number):boolean;
 
    create(parent:Window,name:string):boolean;
    create(parent:Window,name:string,style:number,style_ex:number):boolean;

    close():void;

    showWindow():void;
    showWindow(show:boolean):void;
    showWindow(show:boolean,setfocus:boolean):void;

    showModal():number;
    centerWindow():void;
    setIcon(ico:number):void;
    resizeClient(w:number,h:number):void;
    sendMessage(msg:number,wparam:number,lparam:number):number;
    postMessage(msg:number,wparam:number,lparam:number):number;

    get manager():PaintManager;
}


