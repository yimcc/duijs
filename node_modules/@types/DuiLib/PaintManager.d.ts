import {Point,Rect,Size} from "./Util"
import {Control} from "./Control"

export class PaintManager{
    isUpdateNeeded():boolean;
    needUpdate():void;
    invalidate():void;
    invalidate(rc:Rect):void;
    getName():string;

    getHoverTime():number;
    setHoverTime(time:number):void;

    getMousePos():Point;
    getClientSize():Size;
    getInitSize():Size;
    
    getSizeBox():Rect;
    setSizeBox(rc:Rect):void;
    getCaptionRect():Rect;
    setCaptionRect(rc:Rect):void;
    getRoundCorner():Size;
    setRoundCorner(x:number,y:number):void;
    getMinInfo():Size;
    setMinInfo(cx:number,cy:number):void;
    getMaxInfo():Size;
    setMaxInfo(cx:number,cy:number):void;

    isShowUpdateRect():boolean;
    setShowUpdateRect(show:boolean):void;
    isNoActivate():boolean;
    setNoActivate(show:boolean):void;

    getOpacity():number;
    setOpacity(byte:number):void;

    isLayered():boolean;
    setLayered(layed:boolean):void;

    getLayeredInset():Rect;
    setLayeredInset(rc:Rect):void;

    getLayeredOpacity():number;
    setLayeredOpacity(op:number):void;

    getLayeredImage():string;
    setLayeredImage(img:string):void;

    isUseGdiplusText():boolean;
    setUseGdiplusText(use:boolean):void;

    getGdiplusTextRenderingHint():number;
    setGdiplusTextRenderingHint(hint:number):void;

    getRoot():Control;
    findControl(name:string):Control|null;
    findControl(pt:Point):Control|null;

    findSubControlByPoint(parent:Control,pt:Point):Control|null;
    findSubControlByName(parent:Control,pt:Point):Control|null;

    findSubControlByClass(parent:Control,className:string,index?:number):Control|null;
    findSubControlsByClass(parent:Control,className:string):[Control];
    setDpi(dpi:number):void;
}

